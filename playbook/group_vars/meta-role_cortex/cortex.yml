---
cortex_log_level: debug
cortex_target: all

cortex_consul_kv_global_prefix: "cortex/"
cortex_storage_type: s3
cortex_storage_engine: blocks

# Better be explicite to avoid having the public ip registered in kvstore
cortex_instance_interface_names:
  - eth1

cortex_api:
  response_compression_enabled: false
  alertmanager_http_prefix: /alertmanager
  prometheus_http_prefix: /prometheus

cortex_tenant_federation:
  enabled: false

cortex_grpc_client_config:
  grpc_compression: gzip
  max_recv_msg_size: 209715200
  max_send_msg_size: 209715200

cortex_ingester_client:
  grpc_client_config: "{{ cortex_grpc_client_config }}"

cortex_alertmanager:
  data_dir: "{{ cortex_data_directory }}"
  sharding_ring:
    kvstore:
      prefix: "{{ cortex_consul_kv_global_prefix }}alertmanagers/"
    instance_interface_names: "{{ cortex_instance_interface_names }}"
  storage:
    type: "{{ cortex_storage_type }}"
    s3:
      bucketnames: "{{ cortex_storage_s3.bucket_name }}"
      endpoint: "{{ cortex_storage_s3.endpoint }}"
      region: "{{ cortex_storage_s3.region }}"
      access_key_id: "{{ cortex_storage_s3.access_key_id }}"
      secret_access_key: "{{ cortex_storage_s3.secret_access_key }}"

cortex_alertmanager_storage:
  backend: "{{ cortex_storage_type }}"
  s3: "{{ cortex_storage_s3 }}"

cortex_blocks_storage:
  backend: "{{ cortex_storage_type }}"
  s3: "{{ cortex_storage_s3 }}"
  bucket_store:
    sync_dir: "{{ cortex_tsdb_sync_directory }}"
    bucket_index:
      enabled: true
    index_cache:
      backend: "memcached"
      memcached: "{{ memcached_client }}"
    chunks_cache:
      backend: "memcached"
      memcached: "{{ memcached_client }}"
    metadata_cache:
      backend: "memcached"
      memcached: "{{ memcached_client }}"
  tsdb:
    dir: "{{ cortex_tsdb_directory }}"
    flush_blocks_on_shutdown: true
    wal_compression_enabled: true

cortex_compactor:
  data_dir: "{{ cortex_data_directory }}"
  sharding_enabled: false
  block_deletion_marks_migration_enabled: false
  sharding_ring:
    kvstore:
      prefix: "{{ cortex_consul_kv_global_prefix }}collectors/"
    instance_interface_names: "{{ cortex_instance_interface_names }}"

cortex_distributor:
  shard_by_all_labels: true
  ha_tracker:
    enable_ha_tracker: true
    kvstore:
      prefix: "{{ cortex_consul_kv_global_prefix }}ha-tracker/"
  ring:
    kvstore:
      prefix: "{{ cortex_consul_kv_global_prefix }}collectors/"
    instance_interface_names: "{{ cortex_instance_interface_names }}"
  instance_limits:
    max_inflight_push_requests: 20e3
  remote_timeout: 5s

cortex_flusher:
  wal_dir: "{{ cortex_wal_directory }}"

# See https://cortexmetrics.io/docs/configuration/prometheus-frontend/
cortex_frontend:
  query_stats_enabled: true
  log_queries_longer_than: 1s
  grpc_client_config: "{{ cortex_grpc_client_config }}"
  instance_interface_names: "{{ cortex_instance_interface_names }}"
  # This will be load balanced thanks to consul
  downstream_url: 'http://querier.cortex.service.dc1.consul:9009'

cortex_frontend_worker:
  match_max_concurrent: true
  grpc_client_config: "{{ cortex_grpc_client_config }}"

cortex_ingester:
  walconfig:
    wal_enabled: true
    checkpoint_enabled: true
    recover_from_wal: true
    wal_dir: "{{ cortex_wal_directory }}"
    flush_on_shutdown_with_wal_enabled: true
  lifecycler:
    ring:
      kvstore:
        prefix: "{{ cortex_consul_kv_global_prefix }}collectors/"
      replication_factor: 3
    final_sleep: 0s
    num_tokens: 512
    interface_names: "{{ cortex_instance_interface_names }}"
    tokens_file_path: "{{ cortex_tokens_file_path }}"
    unregister_on_shutdown: true
  instance_limits:
    max_inflight_push_requests: 20e3

cortex_limits:
  accept_ha_samples: true
  cardinality_limit: 1e+09
  ingestion_burst_size: 200e+03
  ingestion_rate: 1e+09
  max_series_per_metric: 1e+09
  max_series_per_user: 1e+09
  # set this to the number of queriers * the parallelism
  # We could do something like "{{ ansible_processor_nproc * 4| int  }}" but
  # ansible renders it as an string when cortex expect an int
  max_query_parallelism: 64

cortex_querier:
  active_query_tracker_dir: "{{ cortex_active_query_tracker_directory }}"
  store_gateway_addresses: "dns+store-gateway.cortex.service.dc1.consul:9095"
  timeout: 5m
  max_concurrent: 40

cortex_ruler:
  storage:
    s3:
      bucketnames: "{{ cortex_storage_s3.bucket_name }}"
      endpoint: "{{ cortex_storage_s3.endpoint }}"
      region: "{{ cortex_storage_s3.region }}"
      access_key_id: "{{ cortex_storage_s3.access_key_id }}"
      secret_access_key: "{{ cortex_storage_s3.secret_access_key }}"
    type: "{{ cortex_storage_type }}"
  rule_path: "{{ cortex_rules_directory }}"
  ring:
    instance_interface_names: "{{ cortex_instance_interface_names }}"
    kvstore:
      prefix: "{{ cortex_consul_kv_global_prefix }}rulers/"
  enable_api: true
  enable_sharding: true

cortex_ruler_storage:
  backend: "{{ cortex_storage_type }}"
  s3: "{{ cortex_storage_s3 }}"
  local:
    directory: "{{ cortex_rules_directory }}"

cortex_server:
  http_listen_address: "{{ cortex_http_listen_address }}"
  http_listen_port: 9009
  grpc_listen_address: "{{ cortex_grpc_listen_address }}"
  grpc_listen_port: 9095
  grpc_server_max_concurrent_streams: 1000
  grpc_server_max_recv_msg_size: 209715200
  grpc_server_max_send_msg_size: 209715200
  log_format: logfmt
  log_level: "{{ cortex_log_level }}"
  log_source_ips_enabled: true

cortex_storage:
  engine: "{{ cortex_storage_engine }}"
  aws:
    bucketnames: "{{ cortex_storage_s3.bucket_name }}"
    endpoint: "{{ cortex_storage_s3.endpoint }}"
    region: "{{ cortex_storage_s3.region }}"
    access_key_id: "{{ cortex_storage_s3.access_key_id }}"
    secret_access_key: "{{ cortex_storage_s3.secret_access_key }}"
  boltdb:
    directory: "{{ cortex_boltdb_directory }}"
  filesystem:
    directory: "{{ cortex_chunk_directory }}"
  delete_store:
    store: boltdb
  index_queries_cache_config:
    memcached_client: "{{ memcached_client }}"

cortex_store_gateway:
  sharding_enabled: true
  sharding_ring:
    instance_addr: "{{ private_ip }}"
    kvstore:
      prefix: "{{ cortex_consul_kv_global_prefix }}collectors/"
    replication_factor: 3
    instance_interface_names: "{{ cortex_instance_interface_names }}"

cortex_query_scheduler:
  grpc_client_config: "{{ cortex_grpc_client_config }}"

cortex_query_range:
  align_queries_with_step: true
  split_queries_by_interval: 24h
  cache_results: true
  results_cache:
    cache:
      enable_fifocache: false
      memcached: "{{ memcached_config }}"
      memcached_client: "{{ memcached_client }}"

memcached_config: {}

memcached_client:
  addresses: dns+memcached.service.consul:11211
  timeout: "200ms"
  max_item_size: 5242880  # 5 MiB
